// https://www.youtube.com/watch?v=GA65QBSec-Y&list=PL4cUxeGkcC9jxJX7vojNVK-o8ubDZEcNb&index=16
@use "sass:math";

$grid-columns: 12; // ruudukko asettelu 12 ruutua

// base layout classess ||| sijoittelu luokat
.container {
    width: 100%;
    max-width: 1200px;
    margin: 0 auto;
    padding: 0 10px;
    box-sizing: border-box;
}
.row {
    display: flex;
    flex-flow: row wrap; // Näytön kaventuessa, jos ei ole tilaa, siirtää seuraavalle riville ne joiden tila on loppu
}

// col classess ||| luokat sarakkeille (Kaikille breakpointeille (ruutu koot))
@include xs {
    @for $i from 1 through $grid-columns {
        .col-#{$i}-xs {
            box-sizing: border-box;
            flex-grow: 0;
            width: math.div($i * 100%, $grid-columns) 
    // Esim: Koska $i == 1 alussa, for looppi jakaa 100% näytön leveyden kaikkien column leveyksien mikaan (1-12)
    //      Näin saadaan 12 erilaista column leveyttä aikaiseksi for loopilla.
        }
    }
}
@include s {
    @for $i from 1 through $grid-columns {
        .col-#{$i}-s {
            box-sizing: border-box;
            flex-grow: 0;
            width: math.div($i * 100%, $grid-columns) 
        } 
    }
}
@include m {
    @for $i from 1 through $grid-columns {
        .col-#{$i}-m {
            box-sizing: border-box;
            flex-grow: 0;
            width: math.div($i * 100%, $grid-columns) 
        } 
    }
}
@include l {
    @for $i from 1 through $grid-columns {
        .col-#{$i}-l {
            box-sizing: border-box;
            flex-grow: 0;
            width: math.div($i * 100%, $grid-columns) 
        } 
    }
}
@include xl {
    @for $i from 1 through $grid-columns {
        .col-#{$i}-xl {
            box-sizing: border-box;
            flex-grow: 0;
            width: math.div($i * 100%, $grid-columns) 
        } 
    }
}